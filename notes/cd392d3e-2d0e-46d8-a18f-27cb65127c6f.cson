createdAt: "2018-05-21T09:59:33.006Z"
updatedAt: "2018-05-21T10:22:26.395Z"
type: "MARKDOWN_NOTE"
folder: "ceae56396fb314adeed3"
title: "4-Spring MVC 框架:"
content: '''
  4-Spring MVC 框架:
  
  ---
  
  原文: [Spring MVC 框架入门学习 - 简书](https://www.jianshu.com/p/0b157b3e110b)
  
  #### 1.Spring web mvc 介绍:
  
  Spring web mvc和Struts2都属于表现层的框架,它是Spring框架的一部分,我们可以从Spring的整体结构中看得出来:
  
  ![](https://upload-images.jianshu.io/upload_images/763193-6dbbea6d7ab9617e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700)
  
  #### 2.Web mvc
  
  1. 用户发起request请求至控制器(Controller) 控制接收用户请求的数据，委托给模型进行处理
  
  2. 控制器通过模型(Model)处理数据并得到处理结果,模型通常是指业务逻辑
  
  3. 控制器将模型数据在视图(View)中展示web中模型无法将数据直接在视图上显示，需要通过控制器完成。如果在C/S应用中模型是可以将数据在视图中展示的。
  
  4. 控制器将视图response响应给用户,通过视图展示给用户要的数据或处理结果。
  
  ![](https://upload-images.jianshu.io/upload_images/763193-20351cbe8ba8ccfd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700)
  
  
  #### 3. Spring Web MVC 框架
  
  架构图:
  
  ![](https://upload-images.jianshu.io/upload_images/763193-fad0ac1f4cfbb5ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700)
  
  **流程 :**
  
  1. 用户发送请求至**前端控制器** `DispatcherServlet`.
  2. `DispatcherServlet` 收到请求调用`HandlerMapping`**处理器映射器**.
  3. 处理器映射器找到具体的处理器，生成**处理器对象**及**处理器拦截器**(如果有则生成)一并返回给`DispatcherServlet`.
  4. `DispatcherServlet`调用`HandlerAdapter`**处理器适配器**.
  5. `HandlerAdapter`经过适配调用具体的**处理器(Controller，也叫后端控制器)**.
  6. `Controller`执行完成返回`ModelAndView`.
  7. `HandlerAdapter`将`controller`执行结果`ModelAndView`返回给DispatcherServlet.
  8. `DispatcherServlet`将`ModelAndView`传给`ViewReslover`**视图解析器**.
  9. `ViewReslover`解析后返回具体`View`.
  10. `DispatcherServlet`根据View进行渲染视图（即将模型数据填充至视图中）。
  11. `DispatcherServlet`响应用户。
  
  **组件说明:**
  
  > 以下组件通常使用框架提供实现:
  
  `DispatcherServlet`：作为前端控制器，整个流程控制的中心，控制其它组件执行，统一调度，降低组件之间的耦合性，提高每个组件的扩展性。
  `HandlerMapping`：通过扩展处理器映射器实现不同的映射方式，例如：配置文件方式，实现接口方式，注解方式等。
  `HandlAdapter`：通过扩展处理器适配器，支持更多类型的处理器。
  `ViewResolver`：通过扩展视图解析器，支持更多类型的视图解析，例如：jsp、freemarker、pdf、excel等。
  
  > 下边两个组件通常情况下需要开发:
  
  `Handler`：处理器，即后端控制器用controller表示。
  `View`：视图，即展示给用户的界面，视图中通常需要标签语言展示模型数据。
  
  #### 4.开发环境准备:
  
  
  
  
  
'''
tags: []
isStarred: false
isTrashed: false
