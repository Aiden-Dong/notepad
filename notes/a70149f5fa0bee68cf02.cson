type: "MARKDOWN_NOTE"
folder: "e6c9bd1f0c13e9eccb37"
title: "2- python 流程控制篇"
content: '''
  ## 2- python 流程控制篇
  ---
  ### 1. python 运算符
  
  
  - 算数运算符：
  
  ```
  # 普通算数运算 : 
   +， -， *, /, %  
   
  # 其他算数运算符：
  ** : 幂运算
  // : 取整除， 返回商的整数部分
  ```
  
  - 比较运算符：
  ```
  # 普通比较运算符号 :
  == , !=, <, >, <=, >=
  
  # 其他比较运算符 :
  <>   : 不等于
  ```
  - 赋值运算符：
  ```
  =, +=, -=, *=, /=, %=, **=, //=
  ```
  - 逻辑运算符
  ```
  and | &&  : 与运算符
  or | ||   : 或运算符
  not | !   : 非运算符
  ```
  - 按位运算符
  ```
  &   : 二进制位与运算
  |   : 二进制或运算
  ^   : 二进制异或运算
  ~   : 二进制非运算
  <<  : 二进制左移
  >>  : 二进制右移
  ```
  - 成员运算符
  ```
  in      :  如果在指定的序列中找到一个变量的值，则返回true，否则返回false
  not in  :  如果在指定序列中找不到变量的值，则返回true，否则返回false。
  ```
  - 身份运算符
  ```
  is      :   如果运算符任一侧的变量指向相同的对象，则返回True，否则返回False。
  is not  :   如果运算符任一侧的变量指向相同的对象，则返回True，否则返回False。
  ```
  
  ### 2. 分支语句 if
  
  #### 2.1 通用格式：
  
  ```
  if <test1> :
      <statements1>
  elif <test2> :
      <statements2>
  else :
      <statements3>
  ```
  #### 2.2 真值测试
  
  1. 任何非零数字或非空对象都为真
  2. 数字零。空对戏那个以及特殊对象None 都被认作假。
  3. 比较和相等测试会递归的应用在数据结构中。
  4. 比较和相等测试会返回 True 或 False.
  5. 布尔 and 和 or 运算符会返回真或假的操作对象。
  
  > python 的三种布尔运算符：
  
  ```
  X and Y : 与运算
  X or Y  : 或运算
  not X   : 非运算
  ```
  
  #### 2.3 if/else 三元表达式：
  
  python 中布尔运算符的一种常见角色就是写个表达式， 像 if 语句那样执行。 考虑下列语句， 根据 X 的真值 把 A 设成 Y 或 Z.
  
  ```
  if X :
    A = Y
  else :
    A = Z
  ```
  
  替代方案：
  
  ```
  X = Y if X else Z
  ```
  
  ### 3. 循环语句 for
  
  for 循环在 Python 中是一个通用的序列迭代器： 可以遍历任何有序的序列对象内的元素.
  
  for 循环可用于字符串，列表，元组，其他内置可迭代对象以及之后我们能够通过类创建的新对象。
  
  - 格式：
  
  ```
  for <target> in <object> :
      <statements>
  else:
      <statement>
  ```
  
  ### 4. 循环语句 while
  
   while 语句最完整的书写格式是： 首行以及测试表达式，有一列或多列缩进语句的主体以及一个可选的 else 部分(控制权离开循环而又没有碰到break 语句时会执行)。 python 会一直计算开头的测试，然后执行循环主题内的语句，知道测试返回假值为止。
  
  ```
  while <test> :
      <statement1>
  else :
      <statement2>
  ```
  
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-25T14:43:12.970Z"
updatedAt: "2017-08-26T12:42:40.460Z"
