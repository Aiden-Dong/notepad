createdAt: "2018-03-27T09:19:45.585Z"
updatedAt: "2018-03-27T10:29:07.469Z"
type: "MARKDOWN_NOTE"
folder: "50a801ae3cc972d1a4c3"
title: "18-scala 隐式转换:"
content: '''
  ### 18-scala 隐式转换:
  
  ----
  
  #### 1. 隐式转换简介
  
  在scala语言当中，隐式转换是一项强大的程序语言功能，它不仅能够简化程序设计，也能够使程序具有很强的灵活性。
  
  要想更进一步地掌握scala语言，了解其隐式转换的作用与原理是很有必要的，否则很难得以应手地处理日常开发中的问题。
  
  在scala语言中，隐式转换是无处不在的，只不过scala语言为我们隐藏了相应的细节，例如Float在必要情况下自动转换为Double类型
  
  #### 2. 隐式转换函数
  
  下列赋值如果没有隐式转换的话会报错：
  
  ```
  val a:Int = 3.12
  ```
  
  添加隐式转换函数后可以实现Double类型到Int类型的赋值
  
  ```
  implicit def double2Int(double: Double):Int ={
    return double.toInt
  }
  ```
  
  隐式函数的名称对结构没有影响，即implicit def double2Int(x:Double)=x.toInt函数可以是任何名字，
  只是采用source2Target这种方式函数的意思比较明确，阅读代码的人可以见名知义，增加代码的可读性。
  
  
  隐式转换功能十分强大，可以快速地扩展现有类库的功能，例如下面的代码：
  
  
  
  
  
'''
tags: []
isStarred: false
isTrashed: false
