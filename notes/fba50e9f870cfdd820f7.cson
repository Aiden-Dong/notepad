type: "MARKDOWN_NOTE"
folder: "7671e01e5a4a4ee04aa9"
title: "HDFS篇 (2) 概念"
content: '''
  ### HDFS篇 (2) 概念
  
  ---
  
  ### HDFS 设计基础与目标
  
  - 硬件错误是常态。因此需要冗余
  - 流式数据访问。即数据批量读取而非随即读写，Hadoop擅长做的是数据分析而不是事物处理
  - 大规模数据集
  - 简单一致性模型。 为了降低系统复杂度，对文件采用一次性写多次读的逻辑设计，
  即是文件一经写入，关闭，不能修改
  - 程序采用"数据就近"原则分配节点执行
  
  ### HDFS 体系结构
  
  ![image](http://ww1.sinaimg.cn/mw1024/e91aafadjw1f7z8l8f3t7j20go09eq3r.jpg)
  
  #### 1. NameNode
  1.1 名称节点负责响应客户端的请求，负责管理整个文件系统的元数据。
  
  1.2 HDFS的内部工作机制对客户端是透明的，客户端对HDFS的读、写操作都必须先向name node申请。所以元数据是关键。
  
  1.3 负责维持文件的副本数量
  
  1.4 为了保证集群的元数据不丢失，生产环境下需要配置辅助名称节点(secondary name node,简称2NN),目的是帮助  NameNode 合并编辑日志，减少  NameNode 启动时间，万一name node的元数据丢失就可以从2NN恢复元数据。
  
  1.1.5 名称节点可用的前提是此节点运行名为“NameNode”的进程。
  
  #### 2.DataNode
  
  2.1 负责存放被切割后的文件块。文件在data node的存储单位是块(block)。
  
  2.2 如果hadoop集群是完全分布式模式，那么一个文件的每一个块必须有多个副本，存放在不同的datanode上。当客户端把某个文件写入HDFS时，首先按照固定的块大小（block size）把该文件切成若干个块，再分布式地存储在若干台data node上。
  
  2.3 data node通过心跳信息定期地向name node汇报自身保存的文件块信息。
  
  2.4 数据节点可用的前提是此节点运行名为“DataNode”的进程。
  
  #### 3.事物日志
  #### 4.映像文件
  #### 5.SecondaryNameNode
  
  ### HDFS 的可靠性:
  
  #### 1.冗余副本策略
  
  1.1 可以在 hdfs-site.xml中设置复制因子指定副本数量
  1.2 所有数据块都有副本
  1.3 Datanode 启动时，遍历文件系统，产生一份 HDFS 数据块和本地文件对应关系列表（blockreport）汇报给NameNode;
  
  #### 2.机架策略
  
  2.1 集群一般放在不同的机架上， 机架见带宽要比机架内带宽要小
  2.2 HDFS 的"机架感知"
  2.3 一般本机架存放一个副本，在其他机架在存放别的副本，这样可以防止机架失效时丢失数据，也可以提交带宽利用率。
  
  #### 3.心跳机制
  
  3.1 Namenode 周期性从 Datanode 接受心跳信号和块报告
  3.2 Namenode 根据块报告验证元数据
  3.3 没有按时发送心跳的 Datanode 会被标记为 宕机， 不会再给他任何I/O请求
  3.4 如果 Datanode 失效造成副本数量下降，并且低于预先设置的阈值， NameNode 会检测出这些数据块， 并在合适的时机进行重新复制
  3.5 引发复制还包括副本损坏， 磁盘错误, 复制因子被扩大
  
  
  #### 4.安全模式
  
  4.1 NameNode 启动时会先经过一个"安全模式"阶段
  4.2 安全模式不会产生任何数据写
  4.3 在此阶段 Namenode 收集各个 Datanode 的报告， 当数据块达到最小副本数以上时被认为安全。
  4.4 在一定比例的数据块被确定为“安全”后， 在经过若干时间 ， 安全模式结束
  4.5 的那个检测到副本数不足的数据块时， 该块被复制直到达到最小副本数
  
  #### 5.校验和
  
  5.1 在文件创立时， 每个数据块都产生校验和
  5.2 校验和回作为单独一个隐藏文件保存在命名空间下
  5.3 客户端获取数据时可以检验校验和，从而确定数据块是否破坏
  5.4 如果数据块被破坏， 则读取其他副本
  
  #### 6.回收站
  
  6.1 删除文件时， 其实是放在回收站 /trash
  6.2 回收站里的文件可以快速恢复
  6.3 可以设置一个时间阈值， 当存放时间超过这个阈值时，就被彻底删除，并且释放占用的数据块
  
  #### 7.元数据保护
  
  7.1 映像文件和事务文件是 NameNode 的核心数据。 可以配置为多个副本
  7.2 副本会降低 Namenode 的处理速度, 但增加安全性
  7.3 Namenode 依旧是单点， 如果发生故障要手工切换
  
  #### 8. 快照机制
  
  支持存储某个时间点的映像， 需要时可以使数据重返这个时间的状态
  
  
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-09-20T10:13:31.902Z"
updatedAt: "2018-11-19T06:35:16.149Z"
