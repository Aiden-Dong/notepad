type: "MARKDOWN_NOTE"
folder: "672efc3aadb5d16c7fef"
title: "2-Mysql 管理"
content: '''
  ## 2-Mysql 管理
  
  ---
  ### 1. 创建数据库
  
  #### 数据库和数据库对象 :
  
  > 安装完Mysql 数据库后， 会附带一些数据库， 会附带一些数据库
  
  ```
  MySQL [(none)]> show databases;
  +--------------------+
  | Database           |
  +--------------------+
  | information_schema |
  | mysql              |
  | performance_schema |
  | sys                |
  +--------------------+
  
  information_schema : 主要存储系统的一些数据对象信息， 如用户表信息， 列信息， 权限信息，字符集信息和分区信息。
  
  performance_schema:主要存储数据库服务器性能参数数。
  
  mysql : 主要存储系统的用户权限信息。
  
  test : 该数据库为 Mysql 数据库管理系统自动创建的测试数据库，任何用户都可以使用
  ```
  
  #### 创建数据库 :
  
  ```
  
  MySQL [(none)]> create database DATABASE_NAME;
  Query OK, 1 row affected (0.05 sec) 
  ```
  
  #### 选择数据库 :
  
  ```
  数据库是数据库对象的容器， 所以在操作数据库对象之前， 要先选择数据库
  
  MySQL [(none)]> use DATABASE_NAME;
  Database changed
  ```
  
  #### 删除数据库 :
  
  ```
  drop database DATABASE_NAME;
  ```
  ### 2. 管理用户
  
  - 新安装 root 用户重设密码 :
  
  ```
  mysql> SET password=password('PASSWORD');
  ```
  
  - 创建用户 :
  
  ```
  mysql> create user NEW_USER;
  ```
  
  - 修改用户密码 ：
  
  ```
  mysql> alter user NEW_USER identified by 'PASSWORD';
  ```
  
  - 将数据库赋权限给用户
  
  ```
  grant all on DATABASE_NAEM.TABLE_NAME to 'USER_NAME'@'%'
  ```
  
  - 删除用户 
  
  ```
  DROP USER user_name;
  ```
  
  ### 3. 字符集设置
  
  - 查看字符集
  
  ```
  mysql> SHOW VARIABLES LIKE 'character%';
  
  +--------------------------+----------------------------------------------------------------------+
  | Variable_name            | Value                                                                |
  +--------------------------+----------------------------------------------------------------------+
  | character_set_client     | utf8                                                                 |
  | character_set_connection | utf8                                                                 |
  | character_set_database   | latin1                                                               |
  | character_set_filesystem | binary                                                               |
  | character_set_results    | utf8                                                                 |
  | character_set_server     | latin1                                                               |
  | character_set_system     | utf8                                                                 |
  | character_sets_dir       | /usr/local/share/mysql-5.7.19-linux-glibc2.12-x86_64/share/charsets/ |
  +-----
  
  ---------------------+----------------------------------------------------------------------+
  ```
  
  - 查看数据库的编码方式
  
  ```
  mysql> show variables like 'character_set_database';
  ```
  
  - 查看数据库的属性
  
  ```
  mysql> show create database ${DatabaseName};
  ```
  
  - 查看数据库表属性
  
  ```
  mysql> show create table ${TableName};
  ```
  
  - 创建数据库的时候指定编码格式
  
  ```
  create database `${DB}` character set utf8
  ```
  
  - 创建表时指定编码 
  
  ```
  create table tb_books (
      name varchar(45) not null,
      price double not null,
      bookCount int not null,
      author varchar(45) not null ) default charset = utf8;
  ```
  
  - 修改数据库的编码格式
  
  ```
  alter database <数据库名> character set utf8;
  ```
  
  - 修改数据表的编码格式
  ```
  alter table <表名> character set utf8;
  ```
  - 修改默认字符集的方式 
  
  ```
  mysql> SET character_set_client = utf8 ;  
  mysql> SET character_set_connection = utf8 ;   
  mysql> SET character_set_database = utf8 ;   
  mysql> SET character_set_results = utf8 ;    
  mysql> SET character_set_server = utf8 ;   
   
  mysql> SET collation_connection = utf8 ;  
  mysql> SET collation_database = utf8 ;   
  mysql> SET collation_server = utf8 ; 
  ```
  
  一般就算设置了表的mysql默认字符集为utf8并且通过UTF-8编码发送查询，你会发现存入数据库的仍然是乱码。问题就出在这个connection连接层上。解决方法是在发送查询前执行一下下面这句：
  
  ```
  SET NAMES 'utf8';  
  ```
  
  相当于 :
  
  ```
  SET character_set_client = utf8;  
  SET character_set_results = utf8;   
  SET character_set_connection = utf8; 
  ```
  
  ### 4.mysql 客户端链接状态:
  
  `information_schema.processlist`
  
  
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-26T02:42:46.186Z"
updatedAt: "2019-01-23T07:21:41.696Z"
