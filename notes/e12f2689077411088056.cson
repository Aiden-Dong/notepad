type: "MARKDOWN_NOTE"
folder: "672efc3aadb5d16c7fef"
title: "3-Ｍysql 基本操作"
content: '''
  ### 3-Ｍysql 基本操作
  
  ---
  
  ### 1.表元信息操作
  
  #### 1.1 创建表
  
  ```
  create table table_name(
      属性名 数据类型 [完整约束条件]，
      属性名 数据类型 [完整约束条件]，
      。。。
      属性名 数据类型
  );
  ```
  
  #### 1.2 描述表结构
  
  ```
  desc table_name;
  show create table table_name;
  ```
  #### 1.3 删除表
  ```
  drop table table_name;
  ```
  #### 1.4 修改表
  
  1. 修改表名：
  ```
  alter table table_name rename new_table_name;
  ```
  2. 增加字段：
  ```
  alter table table_name add (属性名 数据类型 ...);
  ```
  3. 删除字段
  
  ```
  alter table table_name drop (属性名);
  ```
  4. 修改字段
  
  ```
  alter table table_name modify (属性名 数据类型);
  ```
  5. 删除外键约束
  ```
  alter table table_name drop foreign key(外键别名);
  ```
  6. 重命名列名：
  
  ```
  alter table table_name change oldname newname varchar(15);
  ```
  #### 1.5 表的约束：
  
  > Mysql 支持的完整性约束：
  
  ```
  not null            非空约束
  default             设置默认值
  unique  key         唯一约束
  primary key         主键约束
  auto_increment      自动增加
  foreign key         外键约束
  
  constraint 约束名 primary key(约束列)；
  constraint 约束名 foreign key(约束列)；
  ```
  - 设置主键 primary key ：
  1. 直接跟在列后面
  ```
  MySQL [saligia]> create table one(one_id int primary key,
                                      one_num varchar(20));
  ```
  2. 在最后设置
  ```
  MySQL [saligia]> create table two(one_id int,
                                   one_num varchar(20),
                                   primary key(one_id));
  ```
  - 设置表的外键:
  ```
  constraint 外键别名 foreign key(属性)
          references 表名(属性名)
  ```
  
  ### 2. 数据操作
  
  #### 2.1 插入数据
  
  ```
  INSERT INTO table_name ( field1, field2,...fieldN )
                         VALUES
                         ( value1, value2,...valueN );
  ```
  
  - INSERT  IGNORE INTO 
  
  插入时出现 UNIQUE 或 PRIMARY KEY 冲突的时候插入数据被忽略
  
  - INSERT .... ON DUPLICATE KEY UPDATE
  
  如果您指定了ON DUPLICATE KEY UPDATE，并且插入行后会导致在一个UNIQUE索引或PRIMARY KEY中出现重复值，则执行旧行UPDATE。
  
  - 使用 load data 从本地导入 
  
  ```
  LOAD DATA LOCAL INFILE '{folder}/{file}'
                          INTO TABLE {table}
                          FIELDS TERMINATED BY '\\x1a' ESCAPED BY '\\0'
                          LINES TERMINATED BY '\\n'
                          ({columns});
  ```
  
  - 使用 insert 批量导入数据
  
  ```
  INSERT INTO flow_source_id_map (app_id, source_id_string)
              SELECT sf.app_id, sf.flow_path FROM {table} sf
  ```
  
  #### 2.2 数据查询操作
  
  ```
  SELECT column_name,column_name
  FROM table_name
  [WHERE Clause]
  [OFFSET M ][LIMIT N]
  ```
  
  #### 2.3 数据更新操作
  
  ```
  UPDATE table_name SET field1=new-value1, field2=new-value2
  [WHERE Clause]
  ```
  
  #### 2.4 数据删除操作 
  
  ```
  DELETE FROM table_name [WHERE Clause]
  ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-08-28T05:39:25.018Z"
updatedAt: "2018-03-21T06:59:02.159Z"
